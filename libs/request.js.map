{"version":3,"file":"request.js","names":["Request","hostname","headers","AUTH_HEADERS","response_type","REQUEST_RESPONSE_TYPE","request_timeout","REQUEST_TIMEOUT","request_throttle_interval","REQUEST_THROTTLE_INTERVAL","request_debounce_interval","REQUEST_DEBOUNCE_INTERVAL","request_concurrency","REQUEST_CONCURRENCY","pending_requests","REQUEST_PENDING_COUNT","run","url","method","body","reporter","updatedMethod","convertStringToLowercase","config","baseURL","responseType","timeout","httpsAgent","https","Agent","keepAlive","RequestAxiosInstance","axios","create","interceptors","request","use","debounceInterval","debounce","throttleInterval","throttle","clearInterval","warn","convertStringToUppercase","REQUEST_BIGCOMMERCE_API_URL","res","info","status","statusText","err","error","message","convertObjectToString","response","Math","max","get","then","catch","results","post","Error"],"sources":["../src/libs/request.js"],"sourcesContent":["\"use strict\";\n\nimport axios from \"axios\";\nimport * as https from \"https\";\nimport { AUTH_HEADERS, REQUEST_BIGCOMMERCE_API_URL, REQUEST_CONCURRENCY, REQUEST_DEBOUNCE_INTERVAL, REQUEST_PENDING_COUNT, REQUEST_RESPONSE_TYPE, REQUEST_THROTTLE_INTERVAL, REQUEST_TIMEOUT } from \"../constants\";\nimport { convertObjectToString, convertStringToLowercase, convertStringToUppercase } from \"../utils/convertValues\";\nimport { debounce } from \"../utils/debounce\";\nimport { throttle } from \"../utils/throttle\";\n\nexport class Request {\n\tconstructor(\n\t\thostname,\n\t\t{\n\t\t\theaders = AUTH_HEADERS,\n\t\t\tresponse_type = REQUEST_RESPONSE_TYPE,\n\t\t\trequest_timeout = REQUEST_TIMEOUT,\n\t\t\trequest_throttle_interval = REQUEST_THROTTLE_INTERVAL,\n\t\t\trequest_debounce_interval = REQUEST_DEBOUNCE_INTERVAL,\n\t\t\trequest_concurrency = REQUEST_CONCURRENCY\n\t\t} = {}\n\t) {\n\t\tthis.hostname = hostname;\n\t\tthis.response_type = response_type;\n\t\tthis.headers = headers;\n\t\tthis.pending_requests = REQUEST_PENDING_COUNT;\n\t\tthis.request_timeout = request_timeout;\n\t\tthis.request_throttle_interval = request_throttle_interval;\n\t\tthis.request_debounce_interval = request_debounce_interval;\n\t\tthis.request_concurrency = request_concurrency;\n\t}\n\n\t/**\n\t * @description Handle running API requests\n\t * @param {String} url\n\t * @param {String} method\n\t * @param {Object} body\n\t * @param {Object} headers\n\t */\n\tasync run({ url = null, method = null, body = null, headers = null, reporter }) {\n\t\tconst updatedMethod = convertStringToLowercase(method);\n\n\t\tlet config = {\n\t\t\tbaseURL: this.hostname,\n\t\t\theaders: {\n\t\t\t\t...this.headers,\n\t\t\t\t...headers\n\t\t\t},\n\t\t\tresponseType: this.response_type,\n\t\t\ttimeout: this.request_timeout,\n\t\t\thttpsAgent: new https.Agent({ keepAlive: true })\n\t\t};\n\n\t\t// Custom `request` instance\n\t\tconst RequestAxiosInstance = axios.create(config);\n\n\t\t// Use `axios` interceptors for all HTTP methods (GET, POST, PUT, DELETE, etc.)\n\t\tRequestAxiosInstance.interceptors.request.use((config) => {\n\t\t\t// Debounce requests to avoid rate limiting\n\t\t\tlet debounceInterval = debounce(() => this.pending_requests--, this.request_debounce_interval);\n\n\t\t\t// Throttle requests to avoid rate limiting\n\t\t\tlet throttleInterval = throttle(() => {\n\t\t\t\tclearInterval(throttleInterval);\n\t\t\t\tdebounceInterval();\n\n\t\t\t\treturn config;\n\t\t\t}, this.request_throttle_interval);\n\n\t\t\tif (this.pending_requests <= this.request_concurrency) {\n\t\t\t\t// Wait for all throttle to clear\n\t\t\t\tthrottleInterval();\n\t\t\t}\n\n\t\t\tif (this.pending_requests > this.request_concurrency) {\n\t\t\t\t// Return null if there are too many pending requests\n\t\t\t\treporter.warn(`[${convertStringToUppercase(method)}] ${REQUEST_BIGCOMMERCE_API_URL + url} - (THROTTLED) (${this.pending_requests} pending ${this.pending_requests > 1 ? \"requests\" : \"request\"})`);\n\t\t\t}\n\n\t\t\t// Increment pending requests\n\t\t\tthis.pending_requests++;\n\n\t\t\treturn config;\n\t\t}),\n\t\t\t(res) => {\n\t\t\t\t// Send info message to console if request is successful\n\t\t\t\treporter.info(`[${convertStringToUppercase(method)}] ${REQUEST_BIGCOMMERCE_API_URL + url} - (${res?.status} ${res?.statusText})`);\n\n\t\t\t\t// Return response\n\t\t\t\treturn res;\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\t// Send error message to console if request fails\n\t\t\t\treporter.error(`[${convertStringToUppercase(method)}] ${REQUEST_BIGCOMMERCE_API_URL + url} - (ERROR)`);\n\t\t\t\treporter.error(\"\\n\", `${err?.message || convertObjectToString(err) || \"An error occurred. Please try again later.\"}`, \"\\n\");\n\n\t\t\t\t// Return error message\n\t\t\t\treturn err;\n\t\t\t};\n\n\t\t// Use `axios` interceptors for all HTTP methods (GET, POST, PUT, DELETE, etc.)\n\t\tRequestAxiosInstance.interceptors.response.use((res) => {\n\t\t\t// Decrement pending requests\n\t\t\tthis.pending_requests = Math.max(0, this.pending_requests > 0 ? this.pending_requests - 1 : 0);\n\n\t\t\t// Send info message to console if request is successful\n\t\t\treporter.info(\n\t\t\t\t`[${convertStringToUppercase(method)}] ${REQUEST_BIGCOMMERCE_API_URL + url} - (${res?.status} ${res?.statusText}) - (${this.pending_requests} pending ${\n\t\t\t\t\tthis.pending_requests > 1 || this.pending_requests === 0 ? \"requests\" : \"request\"\n\t\t\t\t})`\n\t\t\t);\n\n\t\t\t// Return response\n\t\t\treturn res;\n\t\t}),\n\t\t\t(err) => {\n\t\t\t\tif (err.response) {\n\t\t\t\t\t// Decrement pending requests\n\t\t\t\t\tthis.pending_requests = Math.max(0, this.pending_requests > 0 ? this.pending_requests - 1 : 0);\n\n\t\t\t\t\t// Send log message when error response is received\n\t\t\t\t\treporter.error(`[${convertStringToUppercase(method)}] ${REQUEST_BIGCOMMERCE_API_URL + url} - (${err.response.status} ${err.response.statusText})`);\n\t\t\t\t\treporter.error(\"\\n\", `${err?.message || convertObjectToString(err) || \"An error occurred. Please try again later.\"}`, \"\\n\");\n\t\t\t\t} else if (err.request) {\n\t\t\t\t\t// Decrement pending requests\n\t\t\t\t\tthis.pending_requests = Math.max(0, this.pending_requests > 0 ? this.pending_requests - 1 : 0);\n\n\t\t\t\t\t// Send log message when error request is received\n\t\t\t\t\treporter.error(`[${convertStringToUppercase(method)}] ${REQUEST_BIGCOMMERCE_API_URL + url} - (${err.request.status} ${err.request.statusText})`);\n\t\t\t\t\treporter.error(\"\\n\", `${err?.message || convertObjectToString(err) || \"An error occurred. Please try again later.\"}`, \"\\n\");\n\t\t\t\t} else {\n\t\t\t\t\t// Send log message when error is thrown\n\t\t\t\t\treporter.error(`[${convertStringToUppercase(method)}] ${REQUEST_BIGCOMMERCE_API_URL + url} - (ERROR)`);\n\t\t\t\t\treporter.error(\"\\n\", `${err?.message || convertObjectToString(err) || \"An error occurred. Please try again later.\"}`, \"\\n\");\n\t\t\t\t}\n\n\t\t\t\t// Return error message\n\t\t\t\treturn err;\n\t\t\t};\n\n\t\tswitch (updatedMethod) {\n\t\t\tcase \"get\": {\n\t\t\t\tconst results = await RequestAxiosInstance.get(url, body)\n\t\t\t\t\t.then((res) => res)\n\t\t\t\t\t.catch((err) => err);\n\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\tcase \"post\": {\n\t\t\t\tconst results = await RequestAxiosInstance.post(url, body)\n\t\t\t\t\t.then((res) => res)\n\t\t\t\t\t.catch((err) => err);\n\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`The ${updatedMethod} method is currently not supported.`);\n\t\t}\n\t}\n}\n"],"mappings":"AAAA,YAAY,CAAC,ojDASAA,QAAO,YACnB,iBACCC,QAAQ,OASP,yBADG,CAAC,CAAC,yBANLC,OAAO,CAAPA,OAAO,uBAAGC,uBAAY,sCACtBC,aAAa,CAAbA,aAAa,6BAAGC,gCAAqB,8CACrCC,eAAe,CAAfA,eAAe,+BAAGC,0BAAe,iDACjCC,yBAAyB,CAAzBA,yBAAyB,gCAAGC,oCAAyB,kDACrDC,yBAAyB,CAAzBA,yBAAyB,gCAAGC,oCAAyB,kDACrDC,mBAAmB,CAAnBA,mBAAmB,gCAAGC,8BAAmB,uBAG1C,IAAI,CAACZ,QAAQ,CAAGA,QAAQ,CACxB,IAAI,CAACG,aAAa,CAAGA,aAAa,CAClC,IAAI,CAACF,OAAO,CAAGA,OAAO,CACtB,IAAI,CAACY,gBAAgB,CAAGC,gCAAqB,CAC7C,IAAI,CAACT,eAAe,CAAGA,eAAe,CACtC,IAAI,CAACE,yBAAyB,CAAGA,yBAAyB,CAC1D,IAAI,CAACE,yBAAyB,CAAGA,yBAAyB,CAC1D,IAAI,CAACE,mBAAmB,CAAGA,mBAC5B,CAAC,2CASKI,GAAG,+HAAT,ySAAYC,GAAG,CAAHA,GAAG,oBAAG,IAAI,8BAAEC,MAAM,CAANA,MAAM,uBAAG,IAAI,+BAAEC,IAAI,CAAJA,IAAI,qBAAG,IAAI,gCAAEjB,OAAO,CAAPA,OAAO,wBAAG,IAAI,eAAEkB,QAAQ,OAARA,QAAQ,CACrEC,aAAa,CAAG,GAAAC,uCAAwB,EAACJ,MAAM,CAAC,CAElDK,MAAM,CAAG,CACZC,OAAO,CAAE,IAAI,CAACvB,QAAQ,CACtBC,OAAO,0BACH,IAAI,CAACA,OAAO,CACZA,OAAO,CACV,CACDuB,YAAY,CAAE,IAAI,CAACrB,aAAa,CAChCsB,OAAO,CAAE,IAAI,CAACpB,eAAe,CAC7BqB,UAAU,CAAE,GAAIC,MAAK,CAACC,KAAK,CAAC,CAAEC,SAAS,GAAO,CAAC,CAChD,CAAC,CAGKC,oBAAoB,CAAGC,cAAK,CAACC,MAAM,CAACV,MAAM,CAAC,CAGjDQ,oBAAoB,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,SAACb,MAAM,CAAK,IAErDc,iBAAgB,CAAG,GAAAC,kBAAQ,EAAC,iBAAM,MAAI,CAACxB,gBAAgB,EAAE,EAAE,KAAI,CAACJ,yBAAyB,CAAC,CAG1F6B,gBAAgB,CAAG,GAAAC,kBAAQ,EAAC,UAAM,CAIrC,MAHAC,cAAa,CAACF,gBAAgB,CAAC,CAC/BF,gBAAgB,EAAE,CAEXd,MACR,CAAC,CAAE,KAAI,CAACf,yBAAyB,CAAC,CAelC,MAbI,MAAI,CAACM,gBAAgB,EAAI,KAAI,CAACF,mBAAmB,EAEpD2B,gBAAgB,EAAE,CAGf,KAAI,CAACzB,gBAAgB,CAAG,KAAI,CAACF,mBAAmB,EAEnDQ,QAAQ,CAACsB,IAAI,KAAK,GAAAC,uCAAwB,EAACzB,MAAM,CAAC,OAAK0B,sCAA2B,CAAG3B,GAAG,qBAAmB,KAAI,CAACH,gBAAgB,cAAoC,CAAC,CAAzB,KAAI,CAACA,gBAAoB,CAAG,UAAU,CAAG,SAAS,MAAI,CAInM,KAAI,CAACA,gBAAgB,EAAE,CAEhBS,MACR,CAAC,CAAC,CACD,SAACsB,GAAG,CAAK,CAKR,MAHAzB,SAAQ,CAAC0B,IAAI,KAAK,GAAAH,uCAAwB,EAACzB,MAAM,CAAC,OAAK0B,sCAA2B,CAAG3B,GAAG,iBAAO4B,GAAG,WAAHA,GAAG,QAAHA,GAAG,CAAEE,MAAM,cAAIF,GAAG,WAAHA,GAAG,QAAHA,GAAG,CAAEG,UAAU,MAAI,CAG1HH,GACR,CAAC,CACD,SAACI,GAAG,CAAK,CAMR,MAJA7B,SAAQ,CAAC8B,KAAK,KAAK,GAAAP,uCAAwB,EAACzB,MAAM,CAAC,OAAK0B,sCAA2B,CAAG3B,GAAG,eAAa,CACtGG,QAAQ,CAAC8B,KAAK,CAAC,IAAI,KAAK,QAAAD,GAAG,WAAHA,GAAG,QAAHA,GAAG,CAAEE,OAAO,GAAI,GAAAC,oCAAqB,EAACH,GAAG,CAAC,EAAI,4CAA4C,EAAI,IAAI,CAAC,CAGpHA,GACR,CAAC,CAGFlB,oBAAoB,CAACG,YAAY,CAACmB,QAAQ,CAACjB,GAAG,CAAC,SAACS,GAAG,CAAK,CAYvD,MAVA,MAAI,CAAC/B,gBAAgB,CAAGwC,IAAI,CAACC,GAAG,CAAC,CAAC,CAA0B,CAAC,CAAzB,KAAI,CAACzC,gBAAoB,CAAG,KAAI,CAACA,gBAAgB,CAAG,CAAC,CAAG,CAAC,CAAC,CAG9FM,QAAQ,CAAC0B,IAAI,KACR,GAAAH,uCAAwB,EAACzB,MAAM,CAAC,OAAK0B,sCAA2B,CAAG3B,GAAG,iBAAO4B,GAAG,WAAHA,GAAG,QAAHA,GAAG,CAAEE,MAAM,cAAIF,GAAG,WAAHA,GAAG,QAAHA,GAAG,CAAEG,UAAU,UAAQ,KAAI,CAAClC,gBAAgB,cACnH,CAAC,CAAzB,KAAI,CAACA,gBAAoB,EAA8B,CAAC,GAA3B,KAAI,CAACA,gBAAsB,CAAG,UAAU,CAAG,SAAS,MAElF,CAGM+B,GACR,CAAC,CAAC,CACD,SAACI,GAAG,CAAK,CAsBR,MArBIA,IAAG,CAACI,QAAQ,EAEf,KAAI,CAACvC,gBAAgB,CAAGwC,IAAI,CAACC,GAAG,CAAC,CAAC,CAA0B,CAAC,CAAzB,KAAI,CAACzC,gBAAoB,CAAG,KAAI,CAACA,gBAAgB,CAAG,CAAC,CAAG,CAAC,CAAC,CAG9FM,QAAQ,CAAC8B,KAAK,KAAK,GAAAP,uCAAwB,EAACzB,MAAM,CAAC,OAAK0B,sCAA2B,CAAG3B,GAAG,SAAOgC,GAAG,CAACI,QAAQ,CAACN,MAAM,KAAIE,GAAG,CAACI,QAAQ,CAACL,UAAU,KAAI,CAClJ5B,QAAQ,CAAC8B,KAAK,CAAC,IAAI,KAAK,QAAAD,GAAG,WAAHA,GAAG,QAAHA,GAAG,CAAEE,OAAO,GAAI,GAAAC,oCAAqB,EAACH,GAAG,CAAC,EAAI,4CAA4C,EAAI,IAAI,CAAC,EACjHA,GAAG,CAACd,OAAO,EAErB,KAAI,CAACrB,gBAAgB,CAAGwC,IAAI,CAACC,GAAG,CAAC,CAAC,CAA0B,CAAC,CAAzB,KAAI,CAACzC,gBAAoB,CAAG,KAAI,CAACA,gBAAgB,CAAG,CAAC,CAAG,CAAC,CAAC,CAG9FM,QAAQ,CAAC8B,KAAK,KAAK,GAAAP,uCAAwB,EAACzB,MAAM,CAAC,OAAK0B,sCAA2B,CAAG3B,GAAG,SAAOgC,GAAG,CAACd,OAAO,CAACY,MAAM,KAAIE,GAAG,CAACd,OAAO,CAACa,UAAU,KAAI,CAChJ5B,QAAQ,CAAC8B,KAAK,CAAC,IAAI,KAAK,QAAAD,GAAG,WAAHA,GAAG,QAAHA,GAAG,CAAEE,OAAO,GAAI,GAAAC,oCAAqB,EAACH,GAAG,CAAC,EAAI,4CAA4C,EAAI,IAAI,CAAC,GAG3H7B,QAAQ,CAAC8B,KAAK,KAAK,GAAAP,uCAAwB,EAACzB,MAAM,CAAC,OAAK0B,sCAA2B,CAAG3B,GAAG,eAAa,CACtGG,QAAQ,CAAC8B,KAAK,CAAC,IAAI,KAAK,QAAAD,GAAG,WAAHA,GAAG,QAAHA,GAAG,CAAEE,OAAO,GAAI,GAAAC,oCAAqB,EAACH,GAAG,CAAC,EAAI,4CAA4C,EAAI,IAAI,CAAC,EAIrHA,GACR,CAAC,aAEM5B,aAAa,eACf,KAAK,iBAOL,MAAM,0DANYU,oBAAoB,CAACyB,GAAG,CAACvC,GAAG,CAAEE,IAAI,CAAC,CACvDsC,IAAI,CAAC,SAACZ,GAAG,QAAKA,IAAG,EAAC,CAClBa,KAAK,CAAC,SAACT,GAAG,QAAKA,IAAG,EAAC,eAFfU,QAAO,wCAINA,OAAO,kCAGQ5B,oBAAoB,CAAC6B,IAAI,CAAC3C,GAAG,CAAEE,IAAI,CAAC,CACxDsC,IAAI,CAAC,SAACZ,GAAG,QAAKA,IAAG,EAAC,CAClBa,KAAK,CAAC,SAACT,GAAG,QAAKA,IAAG,EAAC,eAFfU,SAAO,wCAINA,QAAO,eAGR,IAAIE,MAAK,QAAQxC,aAAa,uCAAsC,2DAE5E"}